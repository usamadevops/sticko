// Generated by view binder compiler. Do not edit!
package sticko.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import sticko.app.R;

public final class ConnectionListLayoutTutorialsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputEditText edtSocialName;

  @NonNull
  public final ImageButton ibDelete;

  @NonNull
  public final ImageButton ibInfo;

  @NonNull
  public final ImageView ivProfile;

  @NonNull
  public final TextInputLayout layoutNewPass;

  private ConnectionListLayoutTutorialsBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputEditText edtSocialName, @NonNull ImageButton ibDelete,
      @NonNull ImageButton ibInfo, @NonNull ImageView ivProfile,
      @NonNull TextInputLayout layoutNewPass) {
    this.rootView = rootView;
    this.edtSocialName = edtSocialName;
    this.ibDelete = ibDelete;
    this.ibInfo = ibInfo;
    this.ivProfile = ivProfile;
    this.layoutNewPass = layoutNewPass;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConnectionListLayoutTutorialsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConnectionListLayoutTutorialsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.connection_list_layout_tutorials, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConnectionListLayoutTutorialsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edt_social_name;
      TextInputEditText edtSocialName = ViewBindings.findChildViewById(rootView, id);
      if (edtSocialName == null) {
        break missingId;
      }

      id = R.id.ib_delete;
      ImageButton ibDelete = ViewBindings.findChildViewById(rootView, id);
      if (ibDelete == null) {
        break missingId;
      }

      id = R.id.ib_info;
      ImageButton ibInfo = ViewBindings.findChildViewById(rootView, id);
      if (ibInfo == null) {
        break missingId;
      }

      id = R.id.iv_profile;
      ImageView ivProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.layout_new_pass;
      TextInputLayout layoutNewPass = ViewBindings.findChildViewById(rootView, id);
      if (layoutNewPass == null) {
        break missingId;
      }

      return new ConnectionListLayoutTutorialsBinding((RelativeLayout) rootView, edtSocialName,
          ibDelete, ibInfo, ivProfile, layoutNewPass);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
